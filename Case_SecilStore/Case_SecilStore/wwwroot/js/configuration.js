// Configuration management JavaScript

$(document).ready(function () {
    // Bootstrap 5 modal objects
    const addConfigModal = new bootstrap.Modal(document.getElementById('addConfigModal'));
    const editConfigModal = new bootstrap.Modal(document.getElementById('editConfigModal'));
    const deleteConfigModal = new bootstrap.Modal(document.getElementById('deleteConfigModal'));

    // Filtering operations
    $("#applicationFilter, #searchFilter").on("change keyup", function () {
        filterTable();
    });

    function filterTable() {
        var appFilter = $("#applicationFilter").val().toLowerCase();
        var searchFilter = $("#searchFilter").val().toLowerCase();

        $("#configTable tr").each(function () {
            var row = $(this);
            var app = row.data("app").toLowerCase();
            var name = row.data("name").toLowerCase();
            
            var appMatch = appFilter === "" || app === appFilter;
            var nameMatch = searchFilter === "" || name.indexOf(searchFilter) > -1;
            
            if (appMatch && nameMatch) {
                row.show();
            } else {
                row.hide();
            }
        });
    }

    // Add new configuration
    $("#saveConfig").on("click", function () {
        var applicationName = $("#applicationName").val();
        var name = $("#configName").val();
        var value = $("#configValue").val();
        var type = $("#configType").val();
        var isActive = $("#isActive").is(":checked");

        if (!applicationName || !name || !value || !type) {
            alert("Please fill in all fields.");
            return;
        }

        var config = {
            id: "", // Will be auto-generated by MongoDB
            applicationName: applicationName,
            name: name,
            value: value,
            type: type,
            isActive: isActive,
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString()
        };

        $.ajax({
            url: "/api/Configuration",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(config),
            success: function () {
                addConfigModal.hide();
                location.reload();
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                alert("Error: " + xhr.responseText);
            }
        });
    });

    // Open configuration edit modal
    $(document).on("click", ".edit-config", function () {
        var id = $(this).data("id");

        $.ajax({
            url: "/api/Configuration/" + id,
            type: "GET",
            success: function (config) {
                $("#editConfigId").val(config.id);
                $("#editApplicationName").val(config.applicationName);
                $("#editConfigName").val(config.name);
                $("#editConfigValue").val(config.value);
                $("#editConfigType").val(config.type);
                $("#editIsActive").prop("checked", config.isActive);
                
                editConfigModal.show();
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                alert("Error: " + xhr.responseText);
            }
        });
    });

    // Update configuration
    $("#updateConfig").on("click", function () {
        var id = $("#editConfigId").val();
        var applicationName = $("#editApplicationName").val();
        var name = $("#editConfigName").val();
        var value = $("#editConfigValue").val();
        var type = $("#editConfigType").val();
        var isActive = $("#editIsActive").is(":checked");

        if (!id || !applicationName || !name || !value || !type) {
            alert("Please fill in all fields.");
            return;
        }

        var config = {
            id: id,
            applicationName: applicationName,
            name: name,
            value: value,
            type: type,
            isActive: isActive,
            updatedAt: new Date().toISOString()
        };

        $.ajax({
            url: "/api/Configuration/" + id,
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify(config),
            success: function () {
                editConfigModal.hide();
                location.reload();
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                alert("Error: " + xhr.responseText);
            }
        });
    });

    // Open delete confirmation modal
    $(document).on("click", ".delete-config", function () {
        var id = $(this).data("id");
        $("#deleteConfigId").val(id);
        deleteConfigModal.show();
    });

    // Delete configuration confirmation
    $("#confirmDelete").on("click", function () {
        var id = $("#deleteConfigId").val();

        $.ajax({
            url: "/api/Configuration/" + id,
            type: "DELETE",
            success: function () {
                deleteConfigModal.hide();
                location.reload();
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                alert("Error: " + xhr.responseText);
            }
        });
    });

    // Reset forms when modals are closed
    document.getElementById('addConfigModal').addEventListener('hidden.bs.modal', function () {
        $("#addConfigForm")[0].reset();
    });

    document.getElementById('editConfigModal').addEventListener('hidden.bs.modal', function () {
        $("#editConfigForm")[0].reset();
    });
}); 